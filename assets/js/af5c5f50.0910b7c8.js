"use strict";(self.webpackChunkapi_laravel_doc=self.webpackChunkapi_laravel_doc||[]).push([[976],{3905:(e,a,n)=>{n.d(a,{Zo:()=>u,kt:()=>k});var r=n(7294);function o(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function t(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?t(Object(n),!0).forEach((function(a){o(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):t(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function s(e,a){if(null==e)return{};var n,r,o=function(e,a){if(null==e)return{};var n,r,o={},t=Object.keys(e);for(r=0;r<t.length;r++)n=t[r],a.indexOf(n)>=0||(o[n]=e[n]);return o}(e,a);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(r=0;r<t.length;r++)n=t[r],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),c=function(e){var a=r.useContext(i),n=a;return e&&(n="function"==typeof e?e(a):l(l({},a),e)),n},u=function(e){var a=c(e.components);return r.createElement(i.Provider,{value:a},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},m=r.forwardRef((function(e,a){var n=e.components,o=e.mdxType,t=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,k=d["".concat(i,".").concat(m)]||d[m]||p[m]||t;return n?r.createElement(k,l(l({ref:a},u),{},{components:n})):r.createElement(k,l({ref:a},u))}));function k(e,a){var n=arguments,o=a&&a.mdxType;if("string"==typeof e||o){var t=n.length,l=new Array(t);l[0]=m;var s={};for(var i in a)hasOwnProperty.call(a,i)&&(s[i]=a[i]);s.originalType=e,s[d]="string"==typeof e?e:o,l[1]=s;for(var c=2;c<t;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1286:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>i,contentTitle:()=>l,default:()=>p,frontMatter:()=>t,metadata:()=>s,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const t={sidebar_position:5},l="Objetos y arrays",s={unversionedId:"funadamentos/objetos",id:"funadamentos/objetos",title:"Objetos y arrays",description:"Introducci\xf3n",source:"@site/docs/funadamentos/objetos.md",sourceDirName:"funadamentos",slug:"/funadamentos/objetos",permalink:"/js_curso/docs/funadamentos/objetos",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/funadamentos/objetos.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Funciones",permalink:"/js_curso/docs/funadamentos/funciones"},next:{title:"Parte 2: JavaScript Intermedio",permalink:"/js_curso/docs/category/parte-2-javascript-intermedio"}},i={},c=[{value:"Introducci\xf3n",id:"introducci\xf3n",level:2},{value:"Creaci\xf3n y Manipulaci\xf3n de Objetos",id:"creaci\xf3n-y-manipulaci\xf3n-de-objetos",level:2},{value:"Creaci\xf3n de Objetos",id:"creaci\xf3n-de-objetos",level:2},{value:"Acceso y Modificaci\xf3n de Propiedades",id:"acceso-y-modificaci\xf3n-de-propiedades",level:2},{value:"M\xe9todos de Objetos",id:"m\xe9todos-de-objetos",level:3},{value:"Recorrer las Propiedades de un Objeto",id:"recorrer-las-propiedades-de-un-objeto",level:3},{value:"Arrays y sus M\xe9todos m\xe1s Comunes",id:"arrays-y-sus-m\xe9todos-m\xe1s-comunes",level:2},{value:"Creaci\xf3n de Arrays",id:"creaci\xf3n-de-arrays",level:3},{value:"M\xe9todos Comunes de Arrays",id:"m\xe9todos-comunes-de-arrays",level:3},{value:"Conclusi\xf3n",id:"conclusi\xf3n",level:2}],u={toc:c},d="wrapper";function p(e){let{components:a,...n}=e;return(0,o.kt)(d,(0,r.Z)({},u,n,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"objetos-y-arrays"},"Objetos y arrays"),(0,o.kt)("h2",{id:"introducci\xf3n"},"Introducci\xf3n"),(0,o.kt)("p",null,"Los objetos y arrays son estructuras de datos fundamentales en JavaScript. Los objetos permiten agrupar datos y funcionalidades relacionadas, mientras que los arrays proporcionan una manera de almacenar y manipular listas de elementos. Este cap\xedtulo explorar\xe1 c\xf3mo crear y manipular objetos, as\xed como los m\xe9todos m\xe1s comunes para trabajar con arrays."),(0,o.kt)("h2",{id:"creaci\xf3n-y-manipulaci\xf3n-de-objetos"},"Creaci\xf3n y Manipulaci\xf3n de Objetos"),(0,o.kt)("h2",{id:"creaci\xf3n-de-objetos"},"Creaci\xf3n de Objetos"),(0,o.kt)("p",null,"En JavaScript, un objeto es una colecci\xf3n de propiedades, donde cada propiedad es una asociaci\xf3n entre un nombre (o clave) y un valor."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Sintaxis:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"let objeto = {\n    clave1: valor1,\n    clave2: valor2,\n    // m\xe1s propiedades\n};\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Ejemplo:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'let persona = {\n    nombre: "Juan",\n    edad: 30,\n    profesion: "Desarrollador"\n};\n\nconsole.log(persona.nombre); // Salida: "Juan"\nconsole.log(persona["edad"]); // Salida: 30\n')),(0,o.kt)("h2",{id:"acceso-y-modificaci\xf3n-de-propiedades"},"Acceso y Modificaci\xf3n de Propiedades"),(0,o.kt)("p",null,"Puedes acceder a las propiedades de un objeto utilizando la notaci\xf3n de punto (",(0,o.kt)("inlineCode",{parentName:"p"},"."),") o la notaci\xf3n de corchetes (",(0,o.kt)("inlineCode",{parentName:"p"},"[]"),"). Tambi\xe9n puedes modificar las propiedades del objeto."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Ejemplo:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'let coche = {\n    marca: "Toyota",\n    modelo: "Corolla",\n    a\xf1o: 2020\n};\n\n// Acceso\nconsole.log(coche.marca); // Salida: "Toyota"\nconsole.log(coche["modelo"]); // Salida: "Corolla"\n\n// Modificaci\xf3n\ncoche.a\xf1o = 2021;\nconsole.log(coche.a\xf1o); // Salida: 2021\n\ncoche["color"] = "rojo";\nconsole.log(coche.color); // Salida: "rojo"\n')),(0,o.kt)("h3",{id:"m\xe9todos-de-objetos"},"M\xe9todos de Objetos"),(0,o.kt)("p",null,"Los m\xe9todos son funciones que son propiedades de un objeto. Pueden realizar operaciones utilizando los datos del objeto."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Ejemplo:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'let persona = {\n    nombre: "Ana",\n    saludar: function() {\n        console.log("Hola, " + this.nombre + "!");\n    }\n};\n\npersona.saludar(); // Salida: "Hola, Ana!"\n')),(0,o.kt)("h3",{id:"recorrer-las-propiedades-de-un-objeto"},"Recorrer las Propiedades de un Objeto"),(0,o.kt)("p",null,"Puedes usar un bucle ",(0,o.kt)("inlineCode",{parentName:"p"},"for...in")," para recorrer las propiedades de un objeto."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Ejemplo:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'let persona = {\n    nombre: "Juan",\n    edad: 30,\n    profesion: "Desarrollador"\n};\n\nfor (let propiedad in persona) {\n    console.log(propiedad + ": " + persona[propiedad]);\n}\n\n// Salida:\n// nombre: Juan\n// edad: 30\n// profesion: Desarrollador\n')),(0,o.kt)("h2",{id:"arrays-y-sus-m\xe9todos-m\xe1s-comunes"},"Arrays y sus M\xe9todos m\xe1s Comunes"),(0,o.kt)("h3",{id:"creaci\xf3n-de-arrays"},"Creaci\xf3n de Arrays"),(0,o.kt)("p",null,"Un array es una lista de elementos. Puedes crear un array utilizando corchetes (",(0,o.kt)("inlineCode",{parentName:"p"},"[]"),") y separar los elementos con comas."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Sintaxis:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"let array = [elemento1, elemento2, elemento3];\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Ejemplo:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'let frutas = ["manzana", "banana", "cereza"];\nconsole.log(frutas[0]); // Salida: "manzana"\n')),(0,o.kt)("h3",{id:"m\xe9todos-comunes-de-arrays"},"M\xe9todos Comunes de Arrays"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"push")),": A\xf1ade uno o m\xe1s elementos al final del array.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'frutas.push("naranja");\nconsole.log(frutas); // Salida: ["manzana", "banana", "cereza", "naranja"]\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"pop")),": Elimina el \xfaltimo elemento del array y lo devuelve.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'let ultimaFruta = frutas.pop();\nconsole.log(ultimaFruta); // Salida: "naranja"\nconsole.log(frutas); // Salida: ["manzana", "banana", "cereza"]\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"shift")),": Elimina el primer elemento del array y lo devuelve.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'let primeraFruta = frutas.shift();\nconsole.log(primeraFruta); // Salida: "manzana"\nconsole.log(frutas); // Salida: ["banana", "cereza"]\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"unshift")),": A\xf1ade uno o m\xe1s elementos al principio del array.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'frutas.unshift("lim\xf3n");\nconsole.log(frutas); // Salida: ["lim\xf3n", "banana", "cereza"]\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"length")),": Devuelve el n\xfamero de elementos en el array.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"console.log(frutas.length); // Salida: 3\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"forEach")),": Ejecuta una funci\xf3n proporcionada una vez por cada elemento del array.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'frutas.forEach(function(fruta) {\n    console.log(fruta);\n});\n\n// Salida:\n// "lim\xf3n"\n// "banana"\n// "cereza"\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"map")),": Crea un nuevo array con los resultados de llamar a una funci\xf3n proporcionada en cada elemento del array.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'let frutasMayusculas = frutas.map(function(fruta) {\n    return fruta.toUpperCase();\n});\nconsole.log(frutasMayusculas); // Salida: ["LIM\xd3N", "BANANA", "CEREZA"]\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"filter")),": Crea un nuevo array con todos los elementos que pasan una prueba implementada por una funci\xf3n proporcionada.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'let frutasConA = frutas.filter(function(fruta) {\n    return fruta.includes("a");\n});\nconsole.log(frutasConA); // Salida: ["banana", "cereza"]\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"reduce")),": Aplica una funci\xf3n a un acumulador y a cada valor del array (de izquierda a derecha) para reducirlo a un solo valor.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"let numeros = [1, 2, 3, 4];\nlet suma = numeros.reduce(function(acumulador, valorActual) {\n    return acumulador + valorActual;\n}, 0);\nconsole.log(suma); // Salida: 10\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"find")),": Devuelve el primer elemento del array que satisface la funci\xf3n de prueba proporcionada.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'let frutaEncontrada = frutas.find(function(fruta) {\n    return fruta === "banana";\n});\nconsole.log(frutaEncontrada); // Salida: "banana"\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"findIndex")),": Devuelve el \xedndice del primer elemento del array que satisface la funci\xf3n de prueba proporcionada. De lo contrario, devuelve -1.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'let indiceFruta = frutas.findIndex(function(fruta) {\n    return fruta === "cereza";\n});\nconsole.log(indiceFruta); // Salida: 2\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"splice")),": Cambia el contenido de un array eliminando elementos existentes y/o agregando nuevos elementos.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'frutas.splice(1, 1, "kiwi");\nconsole.log(frutas); // Salida: ["lim\xf3n", "kiwi", "cereza"]\n')),(0,o.kt)("h2",{id:"conclusi\xf3n"},"Conclusi\xf3n"),(0,o.kt)("p",null,"Los objetos y arrays son componentes esenciales en la programaci\xf3n con JavaScript. Los objetos permiten agrupar datos y comportamientos relacionados, mientras que los arrays facilitan el almacenamiento y la manipulaci\xf3n de listas de elementos. Al dominar la creaci\xf3n y manipulaci\xf3n de objetos y arrays, as\xed como los m\xe9todos comunes de arrays, puedes escribir c\xf3digo m\xe1s robusto y eficiente en JavaScript. Con la pr\xe1ctica, estas estructuras de datos se convertir\xe1n en herramientas fundamentales en tu desarrollo como programador."))}p.isMDXComponent=!0}}]);