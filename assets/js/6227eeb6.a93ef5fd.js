"use strict";(self.webpackChunkapi_laravel_doc=self.webpackChunkapi_laravel_doc||[]).push([[7763],{3905:(e,a,n)=>{n.d(a,{Zo:()=>d,kt:()=>v});var r=n(7294);function t(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){t(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function s(e,a){if(null==e)return{};var n,r,t=function(e,a){if(null==e)return{};var n,r,t={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],a.indexOf(n)>=0||(t[n]=e[n]);return t}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var c=r.createContext({}),l=function(e){var a=r.useContext(c),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},d=function(e){var a=l(e.components);return r.createElement(c.Provider,{value:a},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},m=r.forwardRef((function(e,a){var n=e.components,t=e.mdxType,o=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=l(n),m=t,v=p["".concat(c,".").concat(m)]||p[m]||u[m]||o;return n?r.createElement(v,i(i({ref:a},d),{},{components:n})):r.createElement(v,i({ref:a},d))}));function v(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var c in a)hasOwnProperty.call(a,c)&&(s[c]=a[c]);s.originalType=e,s[p]="string"==typeof e?e:t,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7787:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(7462),t=(n(7294),n(3905));const o={sidebar_position:2},i="Cap\xedtulo 13: APIs Web y Fetch",s={unversionedId:"avanzado/fecth",id:"avanzado/fecth",title:"Cap\xedtulo 13: APIs Web y Fetch",description:"Introducci\xf3n",source:"@site/docs/avanzado/fecth.md",sourceDirName:"avanzado",slug:"/avanzado/fecth",permalink:"/docs/avanzado/fecth",draft:!1,editUrl:"https://github.com/jesquiliche/js_curso/edit/main/docs/avanzado/fecth.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Cap\xedtulo 12: M\xf3dulos en JavaScript",permalink:"/docs/avanzado/modulos"},next:{title:"Cap\xedtulo 14: Programaci\xf3n Funcional",permalink:"/docs/avanzado/funcional"}},c={},l=[{value:"Introducci\xf3n",id:"introducci\xf3n",level:2},{value:"Uso de Fetch API para hacer peticiones HTTP",id:"uso-de-fetch-api-para-hacer-peticiones-http",level:2},{value:"\xbfQu\xe9 es la Fetch API?",id:"qu\xe9-es-la-fetch-api",level:3},{value:"Haciendo una Petici\xf3n GET",id:"haciendo-una-petici\xf3n-get",level:3},{value:"Haciendo una Petici\xf3n POST",id:"haciendo-una-petici\xf3n-post",level:3},{value:"Manejo de Datos JSON",id:"manejo-de-datos-json",level:2},{value:"\xbfQu\xe9 es JSON?",id:"qu\xe9-es-json",level:3},{value:"Parseando JSON",id:"parseando-json",level:3},{value:"Enviando JSON",id:"enviando-json",level:3},{value:"CORS y Seguridad en Peticiones",id:"cors-y-seguridad-en-peticiones",level:2},{value:"\xbfQu\xe9 es CORS?",id:"qu\xe9-es-cors",level:3},{value:"C\xf3mo Funciona CORS",id:"c\xf3mo-funciona-cors",level:3},{value:"Configuraci\xf3n de CORS en el Servidor",id:"configuraci\xf3n-de-cors-en-el-servidor",level:3},{value:"Seguridad en Peticiones",id:"seguridad-en-peticiones",level:3},{value:"Conclusi\xf3n",id:"conclusi\xf3n",level:2}],d={toc:l},p="wrapper";function u(e){let{components:a,...n}=e;return(0,t.kt)(p,(0,r.Z)({},d,n,{components:a,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"cap\xedtulo-13-apis-web-y-fetch"},"Cap\xedtulo 13: APIs Web y Fetch"),(0,t.kt)("h2",{id:"introducci\xf3n"},"Introducci\xf3n"),(0,t.kt)("p",null,"Las APIs Web permiten la interacci\xf3n entre tu aplicaci\xf3n y otros servicios a trav\xe9s de peticiones HTTP. En JavaScript, la Fetch API es una herramienta moderna y flexible para realizar estas peticiones. En este cap\xedtulo, exploraremos c\xf3mo usar la Fetch API para hacer peticiones HTTP, c\xf3mo manejar datos JSON, y los conceptos de CORS y seguridad en peticiones."),(0,t.kt)("h2",{id:"uso-de-fetch-api-para-hacer-peticiones-http"},"Uso de Fetch API para hacer peticiones HTTP"),(0,t.kt)("h3",{id:"qu\xe9-es-la-fetch-api"},"\xbfQu\xe9 es la Fetch API?"),(0,t.kt)("p",null,"La Fetch API proporciona una interfaz JavaScript para acceder y manipular partes del canal HTTP, tales como peticiones y respuestas. Tambi\xe9n provee un m\xe9todo global ",(0,t.kt)("inlineCode",{parentName:"p"},"fetch()")," que permite hacer peticiones HTTP de manera sencilla."),(0,t.kt)("h3",{id:"haciendo-una-petici\xf3n-get"},"Haciendo una Petici\xf3n GET"),(0,t.kt)("p",null,"Para hacer una petici\xf3n GET y obtener datos de un servidor, se utiliza el m\xe9todo ",(0,t.kt)("inlineCode",{parentName:"p"},"fetch()"),". Este m\xe9todo devuelve una promesa que se resuelve con la respuesta de la petici\xf3n."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Ejemplo B\xe1sico de Fetch:")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},"fetch('https://api.example.com/data')\n    .then(response => response.json()) // Convierte la respuesta en JSON\n    .then(data => {\n        console.log(data); // Maneja los datos recibidos\n    })\n    .catch(error => {\n        console.error('Error:', error); // Maneja errores\n    });\n")),(0,t.kt)("h3",{id:"haciendo-una-petici\xf3n-post"},"Haciendo una Petici\xf3n POST"),(0,t.kt)("p",null,"Para enviar datos a un servidor, se utiliza una petici\xf3n POST. Se debe especificar el m\xe9todo, los headers y el cuerpo de la petici\xf3n."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Ejemplo B\xe1sico de Fetch con POST:")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},"fetch('https://api.example.com/data', {\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n        nombre: 'Juan',\n        edad: 30\n    })\n})\n.then(response => response.json())\n.then(data => {\n    console.log('Success:', data);\n})\n.catch(error => {\n    console.error('Error:', error);\n});\n")),(0,t.kt)("h2",{id:"manejo-de-datos-json"},"Manejo de Datos JSON"),(0,t.kt)("h3",{id:"qu\xe9-es-json"},"\xbfQu\xe9 es JSON?"),(0,t.kt)("p",null,"JSON (JavaScript Object Notation) es un formato ligero de intercambio de datos que es f\xe1cil de leer y escribir para los humanos, y f\xe1cil de parsear y generar para las m\xe1quinas. Es el formato m\xe1s com\xfan para enviar y recibir datos en aplicaciones web."),(0,t.kt)("h3",{id:"parseando-json"},"Parseando JSON"),(0,t.kt)("p",null,"Cuando se recibe una respuesta en formato JSON, se debe parsear para convertirla en un objeto JavaScript utilizable."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Ejemplo de Parseo de JSON:")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},"fetch('https://api.example.com/data')\n    .then(response => response.json())\n    .then(data => {\n        console.log(data); // Ahora data es un objeto JavaScript\n    });\n")),(0,t.kt)("h3",{id:"enviando-json"},"Enviando JSON"),(0,t.kt)("p",null,"Para enviar datos en formato JSON, se debe convertir el objeto JavaScript en una cadena JSON utilizando ",(0,t.kt)("inlineCode",{parentName:"p"},"JSON.stringify()"),"."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Ejemplo de Env\xedo de JSON:")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},"const data = {\n    nombre: 'Juan',\n    edad: 30\n};\n\nfetch('https://api.example.com/data', {\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n})\n.then(response => response.json())\n.then(data => {\n    console.log('Success:', data);\n})\n.catch(error => {\n    console.error('Error:', error);\n});\n")),(0,t.kt)("h2",{id:"cors-y-seguridad-en-peticiones"},"CORS y Seguridad en Peticiones"),(0,t.kt)("h3",{id:"qu\xe9-es-cors"},"\xbfQu\xe9 es CORS?"),(0,t.kt)("p",null,"CORS (Cross-Origin Resource Sharing) es un mecanismo que permite que los recursos de una p\xe1gina web sean solicitados desde otro dominio distinto al dominio desde el que se sirvi\xf3 el recurso. CORS es un componente de la pol\xedtica de seguridad de los navegadores y est\xe1 dise\xf1ado para prevenir ataques Cross-Site Scripting (XSS) y otras vulnerabilidades."),(0,t.kt)("h3",{id:"c\xf3mo-funciona-cors"},"C\xf3mo Funciona CORS"),(0,t.kt)("p",null,"Cuando se hace una petici\xf3n a un dominio diferente, el navegador env\xeda una petici\xf3n preflight (de pre-verificaci\xf3n) utilizando el m\xe9todo OPTIONS para determinar si el servidor permite la solicitud. Si el servidor permite la solicitud, responde con los encabezados CORS adecuados, y el navegador permite la petici\xf3n original."),(0,t.kt)("h3",{id:"configuraci\xf3n-de-cors-en-el-servidor"},"Configuraci\xf3n de CORS en el Servidor"),(0,t.kt)("p",null,"Para permitir CORS, el servidor debe incluir los encabezados CORS en sus respuestas."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Ejemplo de Configuraci\xf3n de CORS en Node.js:")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},"const express = require('express');\nconst app = express();\n\napp.use((req, res, next) => {\n    res.header('Access-Control-Allow-Origin', '*'); // Permitir todos los or\xedgenes\n    res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE'); // Permitir m\xe9todos espec\xedficos\n    res.header('Access-Control-Allow-Headers', 'Content-Type, Authorization'); // Permitir headers espec\xedficos\n    next();\n});\n\napp.get('/data', (req, res) => {\n    res.json({ message: 'Datos recibidos correctamente' });\n});\n\napp.listen(3000, () => {\n    console.log('Servidor corriendo en puerto 3000');\n});\n")),(0,t.kt)("h3",{id:"seguridad-en-peticiones"},"Seguridad en Peticiones"),(0,t.kt)("p",null,"La seguridad en peticiones es crucial para proteger tanto a los usuarios como a los servidores de posibles ataques. Aqu\xed hay algunas pr\xe1cticas recomendadas:"),(0,t.kt)("ol",null,(0,t.kt)("li",{parentName:"ol"},(0,t.kt)("strong",{parentName:"li"},"Validar y Sanitizar Entradas:")," Siempre valida y sanitiza los datos que recibes para prevenir inyecciones de c\xf3digo y otros ataques."),(0,t.kt)("li",{parentName:"ol"},(0,t.kt)("strong",{parentName:"li"},"Usar HTTPS:")," Aseg\xfarate de que las peticiones se realicen sobre HTTPS para proteger la integridad y confidencialidad de los datos."),(0,t.kt)("li",{parentName:"ol"},(0,t.kt)("strong",{parentName:"li"},"Autenticaci\xf3n y Autorizaci\xf3n:")," Implementa mecanismos de autenticaci\xf3n y autorizaci\xf3n para asegurar que solo los usuarios leg\xedtimos puedan acceder y modificar los recursos.")),(0,t.kt)("h2",{id:"conclusi\xf3n"},"Conclusi\xf3n"),(0,t.kt)("p",null,"La Fetch API es una herramienta poderosa y flexible para realizar peticiones HTTP en JavaScript. Entender c\xf3mo manejar datos JSON, as\xed como los conceptos de CORS y seguridad en peticiones, es esencial para crear aplicaciones web robustas y seguras. Con este conocimiento, estar\xe1s mejor preparado para interactuar con APIs y manejar datos de manera eficiente en tus proyectos."))}u.isMDXComponent=!0}}]);